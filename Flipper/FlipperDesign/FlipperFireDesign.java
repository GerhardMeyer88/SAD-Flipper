package SAD.Flipper.FlipperDesign;

import SAD.Flipper.Flipper;

public class FlipperFireDesign implements FlipperDesign {

    private final Flipper flipper;

    public FlipperFireDesign(Flipper flipper) {
        this.flipper = flipper;
    }

    @Override
    public void startGameFont() {
        System.out.println("\n" +
                "\n" +
                " (                                                                         \n" +
                " )\\ )                (                       )               )          )  \n" +
                "(()/(       (     (  )\\   (  (     (      ( /(    )  (    ( /(   (   ( /(  \n" +
                " /(_))`  )  )\\   ))\\((_)  )\\))(   ))\\ (   )\\())( /(  )(   )\\()) ))\\  )\\()) \n" +
                "(_))  /(/( ((_) /((_)_   ((_))\\  /((_))\\ (_))/ )(_))(()\\ (_))/ /((_)(_))/  \n" +
                "/ __|((_)_\\ (_)(_)) | |   (()(_)(_)) ((_)| |_ ((_)_  ((_)| |_ (_))  | |_   \n" +
                "\\__ \\| '_ \\)| |/ -_)| |  / _` | / -_)(_-<|  _|/ _` || '_||  _|/ -_) |  _|  \n" +
                "|___/| .__/ |_|\\___||_|  \\__, | \\___|/__/ \\__|\\__,_||_|   \\__|\\___|  \\__|  \n" +
                "     |_|                 |___/                                             \n" +
                "\n");
    }

    @Override
    public void stopGameFont() {
        System.out.println("\n" +
                "\n" +
                "                                 )                    \n" +
                " (                            ( /(                    \n" +
                " )\\ )       )     )      (    )\\())   )      (   (    \n" +
                "(()/(    ( /(    (      ))\\  ((_)\\   /((    ))\\  )(   \n" +
                " /(_))_  )(_))   )\\  ' /((_)   ((_) (_))\\  /((_)(()\\  \n" +
                "(_)) __|((_)_  _((_)) (_))    / _ \\ _)((_)(_))   ((_) \n" +
                "  | (_ |/ _` || '  \\()/ -_)  | (_) |\\ V / / -_) | '_| \n" +
                "   \\___|\\__,_||_|_|_| \\___|   \\___/  \\_/  \\___| |_|   \n" +
                "                                                      \n" +
                "\n");
    }

    @Override
    public void bonusGameFont() {
        System.out.println("\n" +
                "\n" +
                "          )      )         (     \n" +
                "   (   ( /(   ( /(         )\\ )  \n" +
                " ( )\\  )\\())  )\\())    (  (()/(  \n" +
                " )((_)((_)\\  ((_)\\     )\\  /(_)) \n" +
                "((_)_   ((_)  _((_) _ ((_)(_))   \n" +
                " | _ ) / _ \\ | \\| || | | |/ __|  \n" +
                " | _ \\| (_) || .` || |_| |\\__ \\  \n" +
                " |___/ \\___/ |_|\\_| \\___/ |___/  \n" +
                "                                 \n" +
                "\n");
    }

    @Override
    public void pinBallInFont() {
        System.out.println("\n" +
                "\n" +
                " (                                    (        )  \n" +
                " )\\ )               )        (   (    )\\ )  ( /(  \n" +
                "(()/( (          ( /(     )  )\\  )\\  (()/(  )\\()) \n" +
                " /(_)))\\   (     )\\()) ( /( ((_)((_)  /(_))((_)\\  \n" +
                "(_)) ((_)  )\\ ) ((_)\\  )(_)) _   _   (_))   _((_) \n" +
                "| _ \\ (_) _(_/( | |(_)((_)_ | | | |  |_ _| | \\| | \n" +
                "|  _/ | || ' \\))| '_ \\/ _` || | | |   | |  | .` | \n" +
                "|_|   |_||_||_| |_.__/\\__,_||_| |_|  |___| |_|\\_| \n" +
                "                                                  \n" +
                "\n");
    }

    @Override
    public void pinBallOutFont() {
        System.out.println("\n" +
                "\n" +
                " (                                       )                  \n" +
                " )\\ )               )        (   (    ( /(           *   )  \n" +
                "(()/( (          ( /(     )  )\\  )\\   )\\())     (  ` )  /(  \n" +
                " /(_)))\\   (     )\\()) ( /( ((_)((_) ((_)\\      )\\  ( )(_)) \n" +
                "(_)) ((_)  )\\ ) ((_)\\  )(_)) _   _     ((_)  _ ((_)(_(_())  \n" +
                "| _ \\ (_) _(_/( | |(_)((_)_ | | | |   / _ \\ | | | ||_   _|  \n" +
                "|  _/ | || ' \\))| '_ \\/ _` || | | |  | (_) || |_| |  | |    \n" +
                "|_|   |_||_||_| |_.__/\\__,_||_| |_|   \\___/  \\___/   |_|    \n" +
                "                                                            \n" +
                "\n");

    }

    @Override
    public void insertCoinFont() {
        System.out.println("\n" +
                "\n" +
                "                                      \n" +
                "   (                               )  \n" +
                "   )\\       (                   ( /(  \n" +
                " (((_)   (  )\\   (        _     )\\()) \n" +
                " )\\___   )\\((_)  )\\ )   _| |_  ((_)\\  \n" +
                "((/ __| ((_)(_) _(_/(  |_   _|  / (_) \n" +
                " | (__ / _ \\| || ' \\))   |_|    | |   \n" +
                "  \\___|\\___/|_||_||_|           |_|   \n" +
                "                                      \n" +
                "\n");

    }

    @Override
    public void showAutorsFont() {
        System.out.println("\n" +
                "\n" +
                "                                                                                                                    \n" +
                "   (               )                                                                                                \n" +
                "   )\\       (   ( /(      (      (                                                                                  \n" +
                "((((_)(    ))\\  )\\()) (   )(    ))\\  (                                                                              \n" +
                " )\\ _ )\\  /((_)(_))/  )\\ (()\\  /((_) )\\ ) _                                                                         \n" +
                " (_)_\\(_)(_))( | |_  ((_) ((_)(_))  _(_/((_)                                                                        \n" +
                "  / _ \\  | || ||  _|/ _ \\| '_|/ -_)| ' \\))_                                                                         \n" +
                " /_/ \\_\\  \\_,_| \\__|\\___/|_|  \\___||_||_|(_)                                                                        \n" +
                " (                                                                                                                  \n" +
                " )\\ )              )         (       (                                                                              \n" +
                "(()/(   (       ( /(     )   )\\ )    )\\   (                                                                         \n" +
                " /(_)) ))\\  (   )\\()) ( /(  (()/(   ((_)_ )\\  (   (                                                                 \n" +
                "(_))  /((_) )\\ ((_)\\  )(_))  /(_))_  _ (_((_) )\\  )\\                                                                \n" +
                "/ __|(_))( ((_)| |(_)((_)_  (_)) __|| |/ _` |((_)((_)                                                               \n" +
                "\\__ \\| || ||_ /| / / / _` |   | (_ || |\\__,_|(_-<(_-<                                                               \n" +
                "|___/ \\_,_|/__||_\\_\\ \\__,_|    \\___||_|      /__//__/                                                               \n" +
                "                                               *                                                                    \n" +
                " (                     )              (      (  `                                                                   \n" +
                " )\\ )      (   (    ( /(     )  (     )\\ )   )\\))(     (   (       (   (                                            \n" +
                "(()/(     ))\\  )(   )\\()) ( /(  )(   (()/(  ((_)()\\   ))\\  )\\ )   ))\\  )(                                           \n" +
                " /(_))_  /((_)(()\\ ((_)\\  )(_))(()\\   ((_)) (_()((_) /((_)(()/(  /((_)(()\\                                          \n" +
                "(_)) __|(_))   ((_)| |(_)((_)_  ((_)  _| |  |  \\/  |(_))   )(_))(_))   ((_)                                         \n" +
                "  | (_ |/ -_) | '_|| ' \\ / _` || '_|/ _` |  | |\\/| |/ -_) | || |/ -_) | '_|                                         \n" +
                "   \\___|\\___| |_|  |_||_|\\__,_||_|  \\__,_|  |_|  |_|\\___|  \\_, |\\___| |_|                                           \n" +
                "                                                           |__/                                                     \n" +
                "   (             (                          (  (            (   (                     )                             \n" +
                "   )\\            )\\ )  (      (     )       )\\))(   '    )  )\\  )\\   (             ( /(   (   (            (   (    \n" +
                "((((_)(   (     (()/(  )(    ))\\ ( /(  (   ((_)()\\ )  ( /( ((_)((_) ))\\  (     (   )\\()) ))\\  )\\   (      ))\\  )(   \n" +
                " )\\ _ )\\  )\\ )   ((_))(()\\  /((_))(_)) )\\  _(())\\_)() )(_)) _   _  /((_) )\\ )  )\\ (_))/ /((_)((_)  )\\ )  /((_)(()\\  \n" +
                " (_)_\\(_)_(_/(   _| |  ((_)(_)) ((_)_ ((_) \\ \\((_)/ /((_)_ | | | |(_))  _(_/( ((_)| |_ (_))   (_) _(_/( (_))   ((_) \n" +
                "  / _ \\ | ' \\))/ _` | | '_|/ -_)/ _` |(_-<  \\ \\/\\/ / / _` || | | |/ -_)| ' \\))(_-<|  _|/ -_)  | || ' \\))/ -_) | '_| \n" +
                " /_/ \\_\\|_||_| \\__,_| |_|  \\___|\\__,_|/__/   \\_/\\_/  \\__,_||_| |_|\\___||_||_| /__/ \\__|\\___|  |_||_||_| \\___| |_|   \n" +
                "                                                                                                                    \n" +
                "\n");

    }

    @Override
    public void eventFont() {
        System.out.println("\n" +
                "\n" +
                "    )                                               \n" +
                " ( /(              )                             )  \n" +
                " )\\())  (   (   ( /(   (     )      (         ( /(  \n" +
                "((_)\\  ))\\  )\\  )\\())  )\\   /((    ))\\  (     )\\()) \n" +
                " _((_)/((_)((_)(_))/  ((_) (_))\\  /((_) )\\ ) (_))/  \n" +
                "|_  /(_))   (_)| |_   | __|_)((_)(_))  _(_/( | |_   \n" +
                " / / / -_)  | ||  _|  | _| \\ V / / -_)| ' \\))|  _|  \n" +
                "/___|\\___|  |_| \\__|  |___| \\_/  \\___||_||_|  \\__|  \n" +
                "                                                    \n" +
                "\n");

    }

}
